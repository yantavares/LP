module Root.Questoes.Q3.AbsLI where

-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

newtype Ident = Ident String deriving (Eq, Ord, Show, Read)

data Program = Prog Stm
  deriving (Eq, Ord, Show, Read)

data Stm = SAss Ident Exp | SBlock [Stm] | SWhile Exp Stm
  deriving (Eq, Ord, Show, Read)

data Exp
  = EAdd Exp Exp
  | ESub Exp Exp
  | EMul Exp Exp
  | EDiv Exp Exp
  | EInt Integer
  | EVar Ident
  deriving (Eq, Ord, Show, Read)
